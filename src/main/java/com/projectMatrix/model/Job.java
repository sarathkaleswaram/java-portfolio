package com.projectMatrix.model;

// Generated Nov 16, 2017 1:21:18 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Job generated by hbm2java
 */
@Entity
@Table(name = "job", catalog = "project_matrix", uniqueConstraints = @UniqueConstraint(columnNames = "job_no"))
public class Job implements java.io.Serializable {

	private Long jobId;
	private Project project;
	private Resource resource;
	private String jobNo;
	private String jobName;
	private String jobStage;
	private String jobStatus;
	private Date receivedDate;
	private Date assignedDate;
	private Date expectedDelivery;
	private Date deliveredOn;
	private Double hoursEstimated;
	private Double hoursSpent;
	private Date lastModified;
	private String remarks;
	private String jobCriticality;
	private Set<WorkbenchJob> workbenchJobs = new HashSet<WorkbenchJob>(0);
	private Set<ResourceAllocation> resourceAllocations = new HashSet<ResourceAllocation>(
			0);
	private Set<JobCompleted> jobCompleteds = new HashSet<JobCompleted>(0);
	private Set<JobStage> jobStages = new HashSet<JobStage>(0);
	private Set<JobUom> jobUoms = new HashSet<JobUom>(0);

	public Job() {
	}

	public Job(Project project, Resource resource, String jobNo,
			String jobName, String jobStage, String jobStatus,
			Date receivedDate, Date assignedDate, Date expectedDelivery,
			Date deliveredOn, Double hoursEstimated, Double hoursSpent,
			Date lastModified, String remarks, String jobCriticality,
			Set<WorkbenchJob> workbenchJobs,
			Set<ResourceAllocation> resourceAllocations,
			Set<JobCompleted> jobCompleteds, Set<JobStage> jobStages,
			Set<JobUom> jobUoms) {
		this.project = project;
		this.resource = resource;
		this.jobNo = jobNo;
		this.jobName = jobName;
		this.jobStage = jobStage;
		this.jobStatus = jobStatus;
		this.receivedDate = receivedDate;
		this.assignedDate = assignedDate;
		this.expectedDelivery = expectedDelivery;
		this.deliveredOn = deliveredOn;
		this.hoursEstimated = hoursEstimated;
		this.hoursSpent = hoursSpent;
		this.lastModified = lastModified;
		this.remarks = remarks;
		this.jobCriticality = jobCriticality;
		this.workbenchJobs = workbenchJobs;
		this.resourceAllocations = resourceAllocations;
		this.jobCompleteds = jobCompleteds;
		this.jobStages = jobStages;
		this.jobUoms = jobUoms;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "job_id", unique = true, nullable = false)
	public Long getJobId() {
		return this.jobId;
	}

	public void setJobId(Long jobId) {
		this.jobId = jobId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "project_f")
	public Project getProject() {
		return this.project;
	}

	public void setProject(Project project) {
		this.project = project;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "assigned_to")
	public Resource getResource() {
		return this.resource;
	}

	public void setResource(Resource resource) {
		this.resource = resource;
	}

	@Column(name = "job_no", unique = true, length = 250)
	public String getJobNo() {
		return this.jobNo;
	}

	public void setJobNo(String jobNo) {
		this.jobNo = jobNo;
	}

	@Column(name = "job_name", length = 250)
	public String getJobName() {
		return this.jobName;
	}

	public void setJobName(String jobName) {
		this.jobName = jobName;
	}

	@Column(name = "job_stage", length = 250)
	public String getJobStage() {
		return this.jobStage;
	}

	public void setJobStage(String jobStage) {
		this.jobStage = jobStage;
	}

	@Column(name = "job_status", length = 250)
	public String getJobStatus() {
		return this.jobStatus;
	}

	public void setJobStatus(String jobStatus) {
		this.jobStatus = jobStatus;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "received_date", length = 10)
	public Date getReceivedDate() {
		return this.receivedDate;
	}

	public void setReceivedDate(Date receivedDate) {
		this.receivedDate = receivedDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "assigned_date", length = 10)
	public Date getAssignedDate() {
		return this.assignedDate;
	}

	public void setAssignedDate(Date assignedDate) {
		this.assignedDate = assignedDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "expected_delivery", length = 10)
	public Date getExpectedDelivery() {
		return this.expectedDelivery;
	}

	public void setExpectedDelivery(Date expectedDelivery) {
		this.expectedDelivery = expectedDelivery;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "delivered_on", length = 10)
	public Date getDeliveredOn() {
		return this.deliveredOn;
	}

	public void setDeliveredOn(Date deliveredOn) {
		this.deliveredOn = deliveredOn;
	}

	@Column(name = "hours_estimated", precision = 22, scale = 0)
	public Double getHoursEstimated() {
		return this.hoursEstimated;
	}

	public void setHoursEstimated(Double hoursEstimated) {
		this.hoursEstimated = hoursEstimated;
	}

	@Column(name = "hours_spent", precision = 22, scale = 0)
	public Double getHoursSpent() {
		return this.hoursSpent;
	}

	public void setHoursSpent(Double hoursSpent) {
		this.hoursSpent = hoursSpent;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "last_modified", length = 10)
	public Date getLastModified() {
		return this.lastModified;
	}

	public void setLastModified(Date lastModified) {
		this.lastModified = lastModified;
	}

	@Column(name = "remarks", length = 1000)
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

	@Column(name = "job_criticality", length = 10)
	public String getJobCriticality() {
		return this.jobCriticality;
	}

	public void setJobCriticality(String jobCriticality) {
		this.jobCriticality = jobCriticality;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "job")
	public Set<WorkbenchJob> getWorkbenchJobs() {
		return this.workbenchJobs;
	}

	public void setWorkbenchJobs(Set<WorkbenchJob> workbenchJobs) {
		this.workbenchJobs = workbenchJobs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "job")
	public Set<ResourceAllocation> getResourceAllocations() {
		return this.resourceAllocations;
	}

	public void setResourceAllocations(
			Set<ResourceAllocation> resourceAllocations) {
		this.resourceAllocations = resourceAllocations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "job")
	public Set<JobCompleted> getJobCompleteds() {
		return this.jobCompleteds;
	}

	public void setJobCompleteds(Set<JobCompleted> jobCompleteds) {
		this.jobCompleteds = jobCompleteds;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "job")
	public Set<JobStage> getJobStages() {
		return this.jobStages;
	}

	public void setJobStages(Set<JobStage> jobStages) {
		this.jobStages = jobStages;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "job")
	public Set<JobUom> getJobUoms() {
		return this.jobUoms;
	}

	public void setJobUoms(Set<JobUom> jobUoms) {
		this.jobUoms = jobUoms;
	}

}
